* `do` of 1 expression is equivalent to that expression, i.e. it does not perform monadic transformations
* `do xxx` == `xxx`
*
* * `do` of 2+ expressions acts as a monadic combinator:
* do xxx
* do
*   xxx
*   yyy
*
* * Above unfolds into Haskell's
* xxx
* xxx >> yyy
*
* * Actually `do` performs a bit differently, since it also automatically evaluates `State` and `EarlyReturn` monads,
* *     plus it also functions as a lifting level for `AA.Implicit.Lift`

