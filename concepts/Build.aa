* Placed in root, not in root/src

build : Builder
build = do
    name "Athenaeum"
    version "0.0.0"
    dependencies deps
    buildDependencies buildDeps

* Separate fn for clarity
* `prelude` imports everything from `Prelude.aa` file from dependencies
* To disable implicit prelude import from a package one may import it explicitly
* E.g. `in AA.Regex.Prelude only regex` will only import `regex` and nothing else
deps : Array Dependency _
deps = standardDeps ++ [
	* Imports extern package `Regex` of semver version `3.17.*`(`*` means latest patch)
	*     from user `@SomeGuy` from the package registry
	* You can delete a published package, but:
	*     1. If the deletion process is initiated less than a day after the release
	*            then the deletion will happen instantly
	*        Note that already downloaded versions of the package will still be physically present
	*     2. If the deletion process is initiated less than a week after the release
	*            then the deletion will take a full day and during that time users will get warnings
	*            about the upcoming package deletion
	*        After 24h pass, the package will be fully removed from the registry
	*        Note that already downloaded versions of the package will still be physically present
	*     3. If the deletion process is initiated after a week after the release then
	*            everything from point 2 applies except that it will take 1 whole month to delete
	*     4. If the package is available in public namespace it no longer can be deleted
	*        You can delete your original package though, and thus "freeze" public version
	*            for it will no longer be able to receive updates until the community decides
	*            to assign another package to this name under new version or decides to fork the package
	*            and give it to someone else for maintenance (should only be possible if the license
	*            and/or creator give permission to do so)
	* You can cancel deletion at any point in time
	* If the community votes for your package and you agree with it then the package becomes available in the public namespace, i.e.
	*     you can omit `... of "@Author"` when importing it
	* This behaviour is how Rust's `crates.io` currently functions (sorta)
	* If the package suddenly becomes worse or if a better alternative emerges the community can vote again to
	*     redirect future versions of the package to new location whilst preserving old ones
	*     without the consent of the creator
	*
	* `noprefix` means there won't be `AA` prefix (generally not recommended)
	* Operators `prelude_`, `noprefix_` and `_of_`
	prelude noprefix dep .Regex "3.17.*" of "@SomeGuy"
]

* Autogenerated
standardDeps : Array Dependency _
standardDeps = [
	prelude dep .FileSystem "1.*"
	prelude dep .Array      "1.*"
	prelude dep .Terminal   "1.*"
	prelude dep .Math       "1.*"
	* --snip-- *
]

* Autogenerated
* This is somewhat circular since `Build.aa` specifies dependencies for itself
buildDeps : Array Dependency _
buildDeps = standardDeps ++ [
	prelude dep .Build "1.*"
]

